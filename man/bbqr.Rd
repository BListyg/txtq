% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bbqr.R
\name{bbqr}
\alias{bbqr}
\title{Create a bare-bones message queue in R.}
\usage{
bbqr(path)
}
\arguments{
\item{path}{Character string giving the file path of the queue.
The \code{bbqr()} function creates a folder at this path to store
the messages.}
}
\description{
The queue lives in the folder you give
in the path. See the README at
\url{https://github.com/wlandau/bbqr}
and the examples in this help file for instructions.
}
\examples{
  path <- tempfile() # Define a path to your queue.
  q <- bbqr(path) # Create the queue.
  list.files(q$path) # The queue lives in this folder.
  q$list() # You have not pushed any messages yet.
  # Let's say two parallel processes (A and B) are sharing this queue.
  # Process A sends process B some messages.
  # You can only send character strings.
  q$push(title = "hello", message = "world")
  q$push(title = "guess", message = "what")
  q$push(title = "you", message = "have")
  q$push(title = "a", message = "queue")
  # See your queued messages.
  q$list()
  q$count()
  q$empty()
  # When Process A accessed the queue, the queue was locked
  # so Process B could not mess up the data.
  # Now, let's assume process B comes online. It can consume
  # some messages, locking the queue so process A does not
  # mess up the data.
  q$pop(2) # Return and remove the first messages that were added.
  # With those messages popped, we are farther along in the queue.
  q$list()
  q$list(1) # You can specify the number of messages to list.
  # But you still have a log of all the messages that were ever pushed.
  q$log()
  # q$pop() with no arguments just pops one message.
  q$pop()
  # Destroy the queue's files.
  q$destroy()
}
